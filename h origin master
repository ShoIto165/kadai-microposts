[1mdiff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb[m
[1mindex 4b85e60..bd083a3 100644[m
[1m--- a/app/controllers/application_controller.rb[m
[1m+++ b/app/controllers/application_controller.rb[m
[36m@@ -14,5 +14,6 @@[m [mclass ApplicationController < ActionController::Base[m
     @count_microposts = user.microposts.count[m
     @count_followings = user.followings.count[m
     @count_followers = user.followers.count[m
[32m+[m[32m    @count_favorites = user.likes.count[m
   end[m
 end[m
[1mdiff --git a/app/controllers/toppages_controller.rb b/app/controllers/toppages_controller.rb[m
[1mindex 1cf033f..e3b2679 100644[m
[1m--- a/app/controllers/toppages_controller.rb[m
[1m+++ b/app/controllers/toppages_controller.rb[m
[36m@@ -3,6 +3,7 @@[m [mclass ToppagesController < ApplicationController[m
     if logged_in?[m
       @micropost = current_user.microposts.build  # form_with ç”¨[m
       @microposts = current_user.feed_microposts.order(id: :desc).page(params[:page])[m
[32m+[m[32m      @like = current_user.favorite(@micropost)[m
     end[m
   end[m
 end[m
[1mdiff --git a/app/controllers/users_controller.rb b/app/controllers/users_controller.rb[m
[1mindex 2fd426a..ca44775 100644[m
[1m--- a/app/controllers/users_controller.rb[m
[1m+++ b/app/controllers/users_controller.rb[m
[36m@@ -40,6 +40,12 @@[m [mclass UsersController < ApplicationController[m
     counts(@user)[m
   end[m
   [m
[32m+[m[32m  def likes[m
[32m+[m[32m    @user = User.find(params[:id])[m
[32m+[m[32m    @likes = @user.likes.page(params[:page])[m
[32m+[m[32m    counts(@user)[m
[32m+[m[32m  end[m
[32m+[m
   private[m
 [m
   def user_params[m
[1mdiff --git a/app/helpers/users_helper.rb b/app/helpers/users_helper.rb[m
[1mindex 2a0ec87..035cafb 100644[m
[1m--- a/app/helpers/users_helper.rb[m
[1m+++ b/app/helpers/users_helper.rb[m
[36m@@ -1,5 +1,5 @@[m
 module UsersHelper[m
[31m-    def gravatar_url(user, options = { size: 80 })[m
[32m+[m[32m  def gravatar_url(user, options = { size: 80 })[m
     gravatar_id = Digest::MD5::hexdigest(user.email.downcase)[m
     size = options[:size][m
     "https://secure.gravatar.com/avatar/#{gravatar_id}?s=#{size}"[m
[1mdiff --git a/app/models/micropost.rb b/app/models/micropost.rb[m
[1mindex b8d4edc..f2a7541 100644[m
[1m--- a/app/models/micropost.rb[m
[1m+++ b/app/models/micropost.rb[m
[36m@@ -1,5 +1,4 @@[m
 class Micropost < ApplicationRecord[m
   belongs_to :user[m
[31m-  [m
   validates :content, presence: true, length: { maximum: 255 }[m
 end[m
[1mdiff --git a/app/models/user.rb b/app/models/user.rb[m
[1mindex 0459098..323bfee 100644[m
[1m--- a/app/models/user.rb[m
[1m+++ b/app/models/user.rb[m
[36m@@ -9,8 +9,11 @@[m [mclass User < ApplicationRecord[m
     [m
   has_many :microposts[m
   has_many :relationships[m
[32m+[m[32m  has_many :favorites[m
[32m+[m[32m  has_many :likes, through: :favorites, source: :micropost[m
   has_many :followings, through: :relationships, source: :follow[m
   has_many :reverses_of_relationship, class_name: 'Relationship', foreign_key: 'follow_id'[m
[32m+[m[32m  has_many :reverses_of_favorite, class_name: 'Favorites' , foreign_key: 'micropost_id'[m
   has_many :followers, through: :reverses_of_relationship, source: :user[m
   [m
   def follow(other_user)[m
[36m@@ -28,6 +31,19 @@[m [mclass User < ApplicationRecord[m
     self.followings.include?(other_user)[m
   end[m
   [m
[32m+[m[32m  def favorite(micropost)[m
[32m+[m[32m      self.favorites.find_or_create_by(micropost_id: micropost.id)[m
[32m+[m[32m  end[m
[32m+[m[41m  [m
[32m+[m[32m  def unfavorite(micropost)[m
[32m+[m[32m    favorite = self.favorites.find_by(micropost_id: micropost.id)[m
[32m+[m[32m    favorite.destroy if favorite[m
[32m+[m[32m  end[m
[32m+[m[41m  [m
[32m+[m[32m  def like?(micropost)[m
[32m+[m[32m     self.likes.include?(micropost)[m
[32m+[m[32m  end[m
[32m+[m[41m  [m
   def feed_microposts[m
     Micropost.where(user_id: self.following_ids + [self.id])[m
   end[m
[1mdiff --git a/app/views/microposts/_microposts.html.erb b/app/views/microposts/_microposts.html.erb[m
[1mindex fbd50d3..df05ee3 100644[m
[1m--- a/app/views/microposts/_microposts.html.erb[m
[1m+++ b/app/views/microposts/_microposts.html.erb[m
[36m@@ -9,10 +9,13 @@[m
         <div>[m
           <p class="mb-0"><%= micropost.content %></p>[m
         </div>[m
[31m-        <div>[m
[31m-          <% if current_user == micropost.user %>[m
[31m-            <%= link_to "Delete", micropost, method: :delete, data: { confirm: "You sure?" }, class: 'btn btn-danger btn-sm' %>[m
[31m-          <% end %>[m
[32m+[m[32m        <div class="col-2">[m
[32m+[m[32m          <div class="btn-group-vertical">[m
[32m+[m[32m            <%= render 'favorites/favorite_button', micropost: micropost %>[m
[32m+[m[32m            <% if current_user == micropost.user %>[m
[32m+[m[32m               <%= link_to "Delete", micropost, method: :delete, data: { confirm: "You sure?" }, class: 'btn btn-danger btn-sm' %>[m
[32m+[m[32m            <% end %>[m
[32m+[m[32m          </div>[m
         </div>[m
       </div>[m
     </li>[m
[1mdiff --git a/app/views/users/followers.html.erb b/app/views/users/followers.html.erb[m
[1mindex 27610b8..b8e00cc 100644[m
[1m--- a/app/views/users/followers.html.erb[m
[1m+++ b/app/views/users/followers.html.erb[m
[36m@@ -13,6 +13,7 @@[m
   <div class="col-sm-8">[m
     <ul class="nav nav-tabs nav-justified mb-3">[m
       <li class="nav-item"><a href="<%= user_path(@user) %>" class="nav-link <%= 'active' if current_page?(user_path(@user)) %>">Microposts  <span class="badge badge-secondary"><%= @count_microposts %></span></a></li>[m
[32m+[m[32m      <li class="nav-item"><a href="<%= likes_user_path(@user) %>" class="nav-link <%= 'active' if current_page?(likes_user_path(@user)) %>">Likes  <span class="badge badge-secondary"><%= @count_favorites %></span></a></li>[m
       <li class="nav-item"><a href="<%= followings_user_path(@user) %>" class="nav-link <%= 'active' if current_page?(followings_user_path(@user)) %>">Followings  <span class="badge badge-secondary"><%= @count_followings %></span></a></li>[m
       <li class="nav-item"><a href="<%= followers_user_path(@user) %>" class="nav-link <%= 'active' if current_page?(followers_user_path(@user)) %>">Followers  <span class="badge badge-secondary"><%= @count_followers %></span></a></li>[m
     </ul>[m
[1mdiff --git a/app/views/users/followings.html.erb b/app/views/users/followings.html.erb[m
[1mindex dda0f9c..bd89632 100644[m
[1m--- a/app/views/users/followings.html.erb[m
[1m+++ b/app/views/users/followings.html.erb[m
[36m@@ -13,6 +13,7 @@[m
   <div class="col-sm-8">[m
     <ul class="nav nav-tabs nav-justified mb-3">[m
       <li class="nav-item"><a href="<%= user_path(@user) %>" class="nav-link <%= 'active' if current_page?(user_path(@user)) %>">Microposts  <span class="badge badge-secondary"><%= @count_microposts %></span></a></li>[m
[32m+[m[32m      <li class="nav-item"><a href="<%= likes_user_path(@user) %>" class="nav-link <%= 'active' if current_page?(likes_user_path(@user)) %>">Likes  <span class="badge badge-secondary"><%= @count_favorites %></span></a></li>[m
       <li class="nav-item"><a href="<%= followings_user_path(@user) %>" class="nav-link <%= 'active' if current_page?(followings_user_path(@user)) %>">Followings  <span class="badge badge-secondary"><%= @count_followings %></span></a></li>[m
       <li class="nav-item"><a href="<%= followers_user_path(@user) %>" class="nav-link <%= 'active' if current_page?(followers_user_path(@user)) %>">Followers  <span class="badge badge-secondary"><%= @count_followers %></span></a></li>[m
     </ul>[m
[1mdiff --git a/app/views/users/show.html.erb b/app/views/users/show.html.erb[m
[1mindex abbcb84..154ddc3 100644[m
[1m--- a/app/views/users/show.html.erb[m
[1m+++ b/app/views/users/show.html.erb[m
[36m@@ -13,6 +13,7 @@[m
   <div class="col-sm-8">[m
     <ul class="nav nav-tabs nav-justified mb-3">[m
       <li class="nav-item"><a href="<%= user_path(@user) %>" class="nav-link <%= 'active' if current_page?(user_path(@user)) %>">Microposts  <span class="badge badge-secondary"><%= @count_microposts %></span></a></li>[m
[32m+[m[32m      <li class="nav-item"><a href="<%= likes_user_path(@user) %>" class="nav-link <%= 'active' if current_page?(likes_user_path(@user)) %>">Likes  <span class="badge badge-secondary"><%= @count_favorites %></span></a></li>[m
       <li class="nav-item"><a href="<%= followings_user_path(@user) %>" class="nav-link <%= 'active' if current_page?(followings_user_path(@user)) %>">Followings  <span class="badge badge-secondary"><%= @count_followings %></span></a></li>[m
       <li class="nav-item"><a href="<%= followers_user_path(@user) %>" class="nav-link <%= 'active' if current_page?(followers_user_path(@user)) %>">Followers  <span class="badge badge-secondary"><%= @count_followers %></span></a></li>[m
     </ul>[m
[1mdiff --git a/config/routes.rb b/config/routes.rb[m
[1mindex 701d44c..1fd7521 100644[m
[1m--- a/config/routes.rb[m
[1m+++ b/config/routes.rb[m
[36m@@ -10,6 +10,7 @@[m [mRails.application.routes.draw do[m
     member do[m
       get :followings[m
       get :followers[m
[32m+[m[32m      get :likes[m
     end[m
     collection do[m
       get :search[m
[36m@@ -18,4 +19,5 @@[m [mRails.application.routes.draw do[m
   [m
   resources :microposts, only: [:create, :destroy][m
   resources :relationships, only: [:create, :destroy][m
[32m+[m[32m  resources :favorites, only: [:create, :destroy][m
 end[m
[1mdiff --git a/db/schema.rb b/db/schema.rb[m
[1mindex 132b332..de80764 100644[m
[1m--- a/db/schema.rb[m
[1m+++ b/db/schema.rb[m
[36m@@ -10,7 +10,17 @@[m
 #[m
 # It's strongly recommended that you check this file into your version control system.[m
 [m
[31m-ActiveRecord::Schema.define(version: 2020_01_25_015707) do[m
[32m+[m[32mActiveRecord::Schema.define(version: 2020_01_26_051541) do[m
[32m+[m
[32m+[m[32m  create_table "favorites", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|[m
[32m+[m[32m    t.bigint "user_id"[m
[32m+[m[32m    t.bigint "micropost_id"[m
[32m+[m[32m    t.datetime "created_at", null: false[m
[32m+[m[32m    t.datetime "updated_at", null: false[m
[32m+[m[32m    t.index ["micropost_id"], name: "index_favorites_on_micropost_id"[m
[32m+[m[32m    t.index ["user_id", "micropost_id"], name: "index_favorites_on_user_id_and_micropost_id", unique: true[m
[32m+[m[32m    t.index ["user_id"], name: "index_favorites_on_user_id"[m
[32m+[m[32m  end[m
 [m
   create_table "microposts", options: "ENGINE=InnoDB DEFAULT CHARSET=utf8", force: :cascade do |t|[m
     t.string "content"[m
[36m@@ -38,6 +48,8 @@[m [mActiveRecord::Schema.define(version: 2020_01_25_015707) do[m
     t.datetime "updated_at", null: false[m
   end[m
 [m
[32m+[m[32m  add_foreign_key "favorites", "microposts"[m
[32m+[m[32m  add_foreign_key "favorites", "users"[m
   add_foreign_key "microposts", "users"[m
   add_foreign_key "relationships", "users"[m
   add_foreign_key "relationships", "users", column: "follow_id"[m
